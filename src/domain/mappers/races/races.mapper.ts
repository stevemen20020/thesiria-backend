// Auto-generated by tools/generate-mappers.ts
import { races, Prisma } from "@prisma/client";
import { RacesEntity } from "../../entities/races/races.entity";

export class RacesMapper {
  static prismaToEntity(
    model: Prisma.racesGetPayload<{
    }>
  ): RacesEntity {
    const mapped: RacesEntity = {
      id:
        model.id !== null && model.id !== undefined ? model.id.toString() : "",
      race:
        model.race !== null && model.race !== undefined
          ? model.race.toString()
          : "",
      strengthBonus:
        model.strength_bonus !== null && model.strength_bonus !== undefined
          ? model.strength_bonus.toString()
          : "",
      dexterityBonus:
        model.dexterity_bonus !== null && model.dexterity_bonus !== undefined
          ? model.dexterity_bonus.toString()
          : "",
      defenseBonus:
        model.defense_bonus !== null && model.defense_bonus !== undefined
          ? model.defense_bonus.toString()
          : "",
      aimBonus:
        model.aim_bonus !== null && model.aim_bonus !== undefined
          ? model.aim_bonus.toString()
          : "",
      visionBonus:
        model.vision_bonus !== null && model.vision_bonus !== undefined
          ? model.vision_bonus.toString()
          : "",
      speedBonus:
        model.speed_bonus !== null && model.speed_bonus !== undefined
          ? model.speed_bonus.toString()
          : "",
      handcraftBonus:
        model.handcraft_bonus !== null && model.handcraft_bonus !== undefined
          ? model.handcraft_bonus.toString()
          : "",
      agilityBonus:
        model.agility_bonus !== null && model.agility_bonus !== undefined
          ? model.agility_bonus.toString()
          : "",
      charismaBonus:
        model.charisma_bonus !== null && model.charisma_bonus !== undefined
          ? model.charisma_bonus.toString()
          : "",
      wisdomBonus:
        model.wisdom_bonus !== null && model.wisdom_bonus !== undefined
          ? model.wisdom_bonus.toString()
          : "",
    };

    return mapped;
  }

  static entityToPrisma(entity: RacesEntity): races {
    // ⚠️ Ajusta manualmente si tu modelo tiene campos obligatorios/autogenerados.
    return {
      id: entity.id as any,
      race: entity.race as any,
      strength_bonus: entity.strengthBonus as any,
      dexterity_bonus: entity.dexterityBonus as any,
      defense_bonus: entity.defenseBonus as any,
      aim_bonus: entity.aimBonus as any,
      vision_bonus: entity.visionBonus as any,
      speed_bonus: entity.speedBonus as any,
      handcraft_bonus: entity.handcraftBonus as any,
      agility_bonus: entity.agilityBonus as any,
      charisma_bonus: entity.charismaBonus as any,
      wisdom_bonus: entity.wisdomBonus as any,
    } as races;
  }
}

export default RacesMapper;
