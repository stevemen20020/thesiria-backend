// Auto-generated by tools/generate-mappers.ts
import { inventory, Prisma } from "@prisma/client";
import { InventoryEntity } from "../../entities/inventory/inventory.entity";
import { ObjectParserForMapper } from "../../helpers/ObjectParserForMapper.helper";

export class InventoryMapper {
  static prismaToEntity(
    model: Prisma.inventoryGetPayload<{
      include: {
        objects:true
      };
    }>
  ): InventoryEntity {
    const mapped: InventoryEntity = {
      id:
        model.id !== null && model.id !== undefined ? model.id.toString() : "",
      idPlayableCharacter:
        model.id_playable_character !== null &&
        model.id_playable_character !== undefined
          ? model.id_playable_character.toString()
          : "",
      idObject:
        model.id_object !== null && model.id_object !== undefined
          ? model.id_object.toString()
          : "",
      quantity:
        model.quantity !== null && model.quantity !== undefined
          ? model.quantity.toString()
          : "",
      objects: model.objects ? ObjectParserForMapper(model.objects) : undefined,
    };

    return mapped;
  }

  static entityToPrisma(entity: InventoryEntity): inventory {
    // ⚠️ Ajusta manualmente si tu modelo tiene campos obligatorios/autogenerados.
    return {
      id: entity.id as any,
      id_playable_character: entity.idPlayableCharacter as any,
      id_object: entity.idObject as any,
      quantity: entity.quantity as any,
    } as inventory;
  }
}

export default InventoryMapper;
