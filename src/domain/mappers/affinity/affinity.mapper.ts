// Auto-generated by tools/generate-mappers.ts
import { affinity, Prisma, elements } from '@prisma/client';
import { AffinityEntity } from "../../entities/affinity/affinity.entity";

export class AffinityMapper {
  static prismaToEntity(
    model: Prisma.affinityGetPayload<{
      include: {
        elements:true
      };
    }>
  ): AffinityEntity {
    const mapped: AffinityEntity = {
      id:
        model.id !== null && model.id !== undefined ? model.id.toString() : "",
      name:
        model.name !== null && model.name !== undefined
          ? model.name.toString()
          : "",
      elementId:
        model.element_id !== null && model.element_id !== undefined
          ? model.element_id.toString()
          : "",
      bonus:
        model.bonus !== null && model.bonus !== undefined
          ? model.bonus.toString()
          : "",
      color:
        model.color !== null && model.color !== undefined
          ? model.color.toString()
          : "",
      elements: model.elements ? {
        id:model.elements.id.toString(),
        name: model.elements.name
      } : undefined,
    };

    return mapped;
  }

  static entityToPrisma(entity: AffinityEntity): affinity {
    // ⚠️ Ajusta manualmente si tu modelo tiene campos obligatorios/autogenerados.
    return {
      id: entity.id as any,
      name: entity.name as any,
      element_id: entity.elementId as any,
      bonus: entity.bonus as any,
      color: entity.color as any,
    } as affinity;
  }
}

export default AffinityMapper;
