// Auto-generated by tools/generate-mappers.ts
import { users, Prisma } from "@prisma/client";
import { UsersEntity } from "../../entities/users/users.entity";

export class UsersMapper {
  static prismaToEntity(model: Prisma.usersGetPayload<{ }>): UsersEntity {
    const mapped: UsersEntity = {
      id: model.id !== null && model.id !== undefined ? model.id.toString() : '',
      userName: model.user_name !== null && model.user_name !== undefined ? model.user_name.toString() : '',
      name: model.name !== null && model.name !== undefined ? model.name.toString() : '',
      lastName: model.last_name !== null && model.last_name !== undefined ? model.last_name.toString() : '',
      email: model.email !== null && model.email !== undefined ? model.email.toString() : '',
      password: model.password !== null && model.password !== undefined ? model.password.toString() : '',

    };

    return mapped;
  }

  static entityToPrisma(entity: UsersEntity): users {
    // ⚠️ Ajusta manualmente si tu modelo tiene campos obligatorios/autogenerados.
    return {
      id: entity.id as any,
      user_name: entity.userName as any,
      name: entity.name as any,
      last_name: entity.lastName as any,
      email: entity.email as any,
      password: entity.password as any,
    } as users;
  }
}

export default UsersMapper;
