// Auto-generated by tools/generate-mappers.ts
import { devil_fruit, Prisma } from "@prisma/client";
import { DevilFruitEntity } from "../../entities";
import { ObjectParserForMapper } from "../../helpers/ObjectParserForMapper.helper";

export class DevilFruitMapper {
  static prismaToEntity(
    model: Prisma.devil_fruitGetPayload<{
      include: {
        skill_usage:true,
        playable_character:true,
        npc:true,
      };
    }>
  ): DevilFruitEntity {
    const mapped: DevilFruitEntity = {
      id:
        model.id !== null && model.id !== undefined ? model.id.toString() : "",
      name:
        model.name !== null && model.name !== undefined
          ? model.name.toString()
          : "",
      bonus:
        model.bonus !== null && model.bonus !== undefined
          ? model.bonus.toString()
          : "",
      skillBonused:
        model.skill_bonused !== null && model.skill_bonused !== undefined
          ? model.skill_bonused.toString()
          : "",
      description:
        model.description !== null && model.description !== undefined
          ? model.description.toString()
          : "",
      awakeningDescription:
        model.awakening_description !== null &&
        model.awakening_description !== undefined
          ? model.awakening_description.toString()
          : "",
      skillUsage: model.skill_usage ? ObjectParserForMapper(model.skill_usage) : undefined,
      npc: model.npc ? ObjectParserForMapper(model.npc) : undefined,
      playableCharacter: model.playable_character
        ? ObjectParserForMapper(model.playable_character)
        : undefined,
    };

    return mapped;
  }

  static entityToPrisma(entity: DevilFruitEntity): devil_fruit {
    // ⚠️ Ajusta manualmente si tu modelo tiene campos obligatorios/autogenerados.
    return {
      id: entity.id as any,
      name: entity.name as any,
      bonus: entity.bonus as any,
      skill_bonused: entity.skillBonused as any,
      description: entity.description as any,
      awakening_description: entity.awakeningDescription as any,
    } as devil_fruit;
  }
}

export default DevilFruitMapper;
