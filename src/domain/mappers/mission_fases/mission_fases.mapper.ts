// Auto-generated by tools/generate-mappers.ts
import { mission_fases, Prisma } from "@prisma/client";
import { MissionFasesEntity } from "../../entities";

export class MissionFasesMapper {
  static prismaToEntity(
    model: Prisma.mission_fasesGetPayload<{
    }>
  ): MissionFasesEntity {
    const mapped: MissionFasesEntity = {
      id:
        model.id !== null && model.id !== undefined ? model.id.toString() : "",
      idMission:
        model.id_mission !== null && model.id_mission !== undefined
          ? model.id_mission.toString()
          : "",
      description:
        model.description !== null && model.description !== undefined
          ? model.description.toString()
          : "",
      fase:
        model.fase !== null && model.fase !== undefined
          ? model.fase.toString()
          : "",
      active:
        model.active !== null && model.active !== undefined
          ? model.active.toString()
          : "",
    };

    return mapped;
  }

  static entityToPrisma(entity: MissionFasesEntity): mission_fases {
    // ⚠️ Ajusta manualmente si tu modelo tiene campos obligatorios/autogenerados.
    return {
      id: entity.id as any,
      id_mission: entity.idMission as any,
      description: entity.description as any,
      fase: entity.fase as any,
      active: entity.active as any,
    } as mission_fases;
  }
}

export default MissionFasesMapper;
