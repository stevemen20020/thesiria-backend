// Auto-generated by tools/generate-mappers.ts
import { talismanes, Prisma } from "@prisma/client";
import { TalismanesEntity } from "../../entities/talismanes/talismanes.entity";

export class TalismanesMapper {
  static prismaToEntity(model: Prisma.talismanesGetPayload<{}>): TalismanesEntity {
    const mapped: TalismanesEntity = {
      id: model.id !== null && model.id !== undefined ? model.id.toString() : '',
      name: model.name !== null && model.name !== undefined ? model.name.toString() : '',
      description: model.description !== null && model.description !== undefined ? model.description.toString() : '',
      type: model.type !== null && model.type !== undefined ? model.type.toString() : '',
      cooldown: model.cooldown !== null && model.cooldown !== undefined ? model.cooldown.toString() : '',
      discovered: model.discovered !== null && model.discovered !== undefined ? model.discovered.toString() : '',
    };

    return mapped;
  }

  static entityToPrisma(entity: TalismanesEntity): talismanes {
    // ⚠️ Ajusta manualmente si tu modelo tiene campos obligatorios/autogenerados.
    return {
      id: entity.id as any,
      name: entity.name as any,
      description: entity.description as any,
      type: entity.type as any,
      cooldown: entity.cooldown as any,
      discovered: entity.discovered as any,
    } as talismanes;
  }
}

export default TalismanesMapper;
