// Auto-generated by tools/generate-mappers.ts
import { playable_character_journal, Prisma } from "@prisma/client";
import { PlayableCharacterJournalEntity } from '../../entities/playable_character_journal/playableCharacterJournal.entity';

export class PlayableCharacterJournalMapper {
  static prismaToEntity(
    model: Prisma.playable_character_journalGetPayload<{
      
    }>
  ): PlayableCharacterJournalEntity {
    const mapped: PlayableCharacterJournalEntity = {
      id:
        model.id !== null && model.id !== undefined ? model.id.toString() : "",
      playableCharacterId:
        model.playable_character_id !== null &&
        model.playable_character_id !== undefined
          ? model.playable_character_id.toString()
          : "",
      npcId:
        model.npc_id !== null && model.npc_id !== undefined
          ? model.npc_id.toString()
          : "",
      relationship:
        model.relationship !== null && model.relationship !== undefined
          ? model.relationship.toString()
          : "",
    };

    return mapped;
  }

  static entityToPrisma(
    entity: PlayableCharacterJournalEntity
  ): playable_character_journal {
    // ⚠️ Ajusta manualmente si tu modelo tiene campos obligatorios/autogenerados.
    return {
      id: entity.id as any,
      playable_character_id: entity.playableCharacterId as any,
      npc_id: entity.npcId as any,
      relationship: entity.relationship as any,
    } as playable_character_journal;
  }
}

export default PlayableCharacterJournalMapper;
